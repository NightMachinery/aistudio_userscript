#+TITLE: aistudio_userscript/breadcrumbs

* _
#+begin_verse
Read claude.md.

Read the userscript file:
```
jscodeshift --silent --transform elider.js --dry --print ai-studio-notification.user.js
```

Use the playwright MCP and open https://aistudio.google.com/app/prompts/new_chat. (playwright - Navigate to a URL)

Do NOT inject the whole userscript into the browser, as the userscript is too big and this will take a long time. Evaluate the exact code snippets you need to test only to see the results.

Implement functions to scroll between messages and bind them to alt+up and alt+down. (These hotkeys should work even when the user is inside the main text area.) Send multiple simple messages (like greetings) to be able to test your scroll code.
#+end_verse

* _
#+begin_verse
test your changes using playwright
#+end_verse

* _
#+begin_verse
Use serena to get familiar with `ai-studio-notification.user.js`.
#+end_verse

* DONE _
#+begin_verse
create a dict of bell names to base64 data. start with `bell-hp3-star-pickup`  from file: '/Users/evar/base/music/greencase/HP3/PC Computer - Harry Potter & the Prisoner of Azkaban - Sound Effects/soundeffects.uax/Magic/pickup_star1..blue..wav'. run bash to get base64.
#+end_verse

#+begin_example js
AIStudioNotify.ringBell("bell-hp3-star-pickup")
#+end_example

#+begin_src zsh :eval never
command base64 -w 0 '/Users/evar/base/music/greencase/HP3/PC Computer - Harry Potter & the Prisoner of Azkaban - Sound Effects/soundeffects.uax/Magic/pickup_star1..blue..wav'
#+end_src

